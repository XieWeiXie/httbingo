syntax = "proto3";

package httpbingo.v1;
option go_package = "github.com/XieWeiXie/httpbingo/v1;v1";


import "google/protobuf/any.proto";
import "google/api/annotations.proto";

service HttpBinService {
  rpc HttpMethodGet(HttpMethodGetReq) returns (ResponseReply) {

    option (google.api.http) = { get: "/v1/httpMethods/get/{id}"};

  };
  rpc HttpMethodPut(HttpMethodPutReq) returns (ResponseReply) {

    option (google.api.http) = { put: "/v1/httpMethods/put" body: "*"};

  };
  rpc HttpMethodDelete(HttpMethodDeleteReq) returns (ResponseReply) {

    option (google.api.http) = { delete: "/v1/httpMethods/delete/{id}"};

  };
  rpc HttpMethodPost(HttpMethodPostReq) returns (ResponseReply) {

    option (google.api.http) = { post: "/v1/httpMethods/post", body: "http_method_post_req"};

  };
  rpc StatusCode(StatusCodeReq) returns (ResponseReply) {

    option (google.api.http) = { get: "/v1/statusCodes/code/{code}"};

  };
  rpc Headers(HeadersReq) returns (ResponseReply) {

    option (google.api.http) = {get: "/v1/headers/header"};

  };
  rpc IP(IPReq) returns (ResponseReply) {

    option (google.api.http) = {get :"/v1/ips/ip"};

  };
  rpc UserAgent(UserAgentReq) returns(ResponseReply) {

    option (google.api.http) = {get: "/v1/userAgents/userAgent",};

  };
}

message ResponseReply {
  int32 code = 1; // 业务状态码
  string message = 2; // 业务描述
  google.protobuf.Any data = 3; // 业务数据
}


message HttpMethodGetReq {
  int32 id = 1; // 主键
}

message HttpMethodGetReply {
  int32 id = 1; // 主键
  string name= 2; // 数据
}

message HttpMethodPutReq {
  int32 id = 1; // 主键
  string name = 2; // 修改项
}

message HttpMethodPutReply{
  int32 id = 1;
  string name = 2;
}

message HttpMethodDeleteReq {
  int32 id = 1;
}

message HttpMethodDeleteReply {

}

message HttpMethodPostReq {
  string name = 1;
}

message HttpMethodPostReply {
  int32 id = 1;
  string name = 2;
}

message StatusCodeReq {
  int32 code = 1;
}

message StatusCodeReply {
  int32 code = 1;
}

message HeadersReq {

}


message HeadersReply {
  map<string, google.protobuf.Any > headers = 1;
}


message IPReq {

}

message IPReply {
  string origin = 1;
}

message UserAgentReq {}

message UserAgentReply {
  string user_agent = 1;
}